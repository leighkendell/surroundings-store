@import './variables';
@import './functions';

// ==========================================================================
// Mixins
// ==========================================================================

// Breakpoint
@mixin breakpoint($point, $type: min-width) {
  // The breakpoint value
  $value: map-get($breakpoints, $point);

  @media ($type: $value) {
    @content;
  }
}

// Fluid typography
// ==========================================================================
@mixin fluidtype($font-min: 13px, $font-max: 18px, $screen-min: 400px, $screen-max: 1000px) {
  font-size: $font-min;
  $fontunit: unquote(unit($font-min));
  $screenunit: unquote(unit($screen-min));

  @if ($screenunit != 'px') {
    @error('fluidfont: $screen-min and $screen-max must be in px');
  }

  @if ($fontunit != 'px' and $fontunit != 'rem' ) {
    @error('fluidfont: $font-min and $font-max must be in px, or rem');
  }

  @if ($fontunit != 'px') {
    $screen-max: strip-unit($screen-max) / strip-unit($font-size-base) * 1rem;
    $screen-min: strip-unit($screen-min) / strip-unit($font-size-base) * 1rem;
  }

  @media (min-width: $screen-min) {
    font-size: calc(#{$font-min} + (#{strip-unit($font-max)} - #{strip-unit($font-min)}) * (100vw - #{$screen-min}) / (#{strip-unit($screen-max)} - #{strip-unit($screen-min)}));
  }

  @media (min-width: $screen-max) {
    font-size: $font-max;
  }
}

// ==========================================================================
// Reusable styles
// ==========================================================================
@mixin card-shadow {
  box-shadow: 0 2px 4px rgba($color-dark, 0.05), 0 4px 15px rgba($color-dark, 0.05);
}

@mixin input {
  --transition: 0.3s ease-in-out;

  display: block;
  width: 100%;
  padding: 1em;
  transition: box-shadow var(--transition), opacity var(--transition);
  border: 1px solid $color-border;
  border-radius: 2px;
  outline: 0;
  background-color: $color-light;

  &:focus {
    box-shadow: 0 0 0 3px $color-yellow;
  }

  &:disabled {
    opacity: 0.5;
  }
}
